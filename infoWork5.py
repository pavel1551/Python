#Списки изменяемые упорядоченные коллекции
food = ["apple", "coconut", "banana"]
print(food)
print(food[0]) #Вывод первого(нулевого) элемента
food[1] = "peach" #Замена элемента
print(food)

food.append(True) #Добавляет элемент в конец списка
print(food)
food.extend("string") #Перебирает каждый элемент и добавляет его по отдельности
print(food)
food.extend(["string", 2]) #Добавит элемент последовательно
print(food)

food.remove("apple") #Убирает элемент списка
print(food)

print("banana" in food) #Проверяет существование элемента и позвращает ответ True или False
print("banana" not in food) #Проверяет отсутствие элемента и позвращает ответ True или False

print(food[0:2]) #выведем элементы от 0 до 2
print(food[0:6:2]) #выведем элементы от 0 до 6 + задаем шаг 2



### Кортеж ### - не изменяемая коллекция, упорядоченность, элементы могут быть разных видов. Занимают меньше места в памяти, чем списки.
#три вида варианта написания
tuple_ = 1,2,3,4 #Первый
# tuple_2 = (1,2,3,4) #Второй
# tuple_3 = tuple ([1,2,3,4]) #Третий
print(tuple_)
# print(tuple_2)
# print(tuple_3)
print(tuple_[0]) #Обращение по индексу

tuple_4 = ([8,6],1,2,3,4) + (12,16,11) #Поддерживает конкатенацию (сложение, умножение)
print(tuple_4)
tuple_4[0][0] = 2 #Заходим в кортеж, далее меняем элемент из списка
print(tuple_4)
tuple_4 = (1,2) * 3
print(tuple_4)

